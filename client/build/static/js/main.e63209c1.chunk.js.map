{"version":3,"sources":["client.js","context/global.js","components/Navbar.js","components/Player.js","components/Search.js","components/Mkdir.js","components/UploadMusic.js","components/Folder.js","components/File.js","components/Content.js","App.js","index.js"],"names":["path","method","options","axios","API_PATH","data","message","name","this","_fetch","content","files","FormData","file","append","globalContext","createContext","GlobalContextProvider","children","useState","setPath","setContent","loading","setLoading","showPlayer","setShowPlayer","actualPlayerMusic","setActualPlayerMusic","completePlayerMusic","setCompletePlayerMusic","fmtPath","pathname","replace","useEffect","a","client","getContent","Provider","value","Navbar","useContext","bg","variant","fixed","Brand","href","Player","className","width","height","id","autoPlay","controls","src","onEnded","indexOf","length","newIndex","Search","search","setSearch","directories","filter","dirent","RegExp","test","console","error","Form","Group","controlId","Label","Control","type","placeholder","onChange","e","target","Mkdir","showModal","setShowModal","dirName","fields","setFields","toggleShowModal","handleKeyDown","key","mkdir","Button","onClick","Modal","show","onHide","Header","closeButton","Title","Body","onKeyDown","Footer","UploadMusic","setFiles","save","uploadMusics","File","multiple","Folder","dir","style","cursor","size","Content","Row","Col","textAlign","Spinner","animation","newPath","split","pop","join","map","idx","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e63209c1.chunk.js","sourcesContent":["import axios from 'axios';\nimport { API_PATH } from \"./config.json\";\n\nclass Client {\n  async _fetch(path=\"\", method='get', options={}) {\n    try {\n      return (await axios[method](API_PATH + path, options)).data;\n    } catch (err) {\n      throw err.message;\n    }\n  }\n\n  async mkdir(path=\"\", name) {\n    return (await this._fetch(`/mkdir${path}`, 'post', {\n      name\n    }));\n  }\n\n  async getContent(path=\"\") {\n    return (await this._fetch(`/content${path}`)).content;\n  }\n\n  async uploadMusics(path=\"\", files) {\n    const data = new FormData();\n    for (const file of files) {\n      data.append('musics', file);\n    }\n    return ((await this._fetch(`/upload${path}`, 'post', data)));\n  }\n}\n\nexport default new Client();\n","import React, { useState, useEffect, createContext } from 'react';\nimport client from '../client';\nimport { API_PATH } from '../config.json';\n\nexport const globalContext = createContext();\n\nexport const GlobalContextProvider = ({ children }) => {\n  const [path, setPath] = useState('');\n  const [content, setContent] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [showPlayer, setShowPlayer] = useState(false);\n  const [actualPlayerMusic, setActualPlayerMusic] = useState('');\n  const [completePlayerMusic, setCompletePlayerMusic] = useState('');\n\n  const fmtPath = (pathname) => {\n    return pathname === '' ? '/' : pathname.replace(/!/g, '/')\n  }\n\n  useEffect(() => {\n    if (actualPlayerMusic !== '') {\n      setCompletePlayerMusic(`${API_PATH}/get${fmtPath(path)}/${actualPlayerMusic}`);\n    } else {\n      setCompletePlayerMusic('');\n    }\n    // eslint-disable-next-line\n  }, [actualPlayerMusic]);\n\n  useEffect(() => {\n    setShowPlayer(completePlayerMusic !== '');\n  }, [completePlayerMusic]);\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      setContent((await client.getContent(path)));\n      setLoading(false);\n    })();\n    // eslint-disable-next-line\n  }, [path]);\n\n  return (\n    <globalContext.Provider value={{\n      path,\n      setPath,\n      content,\n      setContent,\n      loading,\n      setLoading,\n      fmtPath,\n      showPlayer,\n      setShowPlayer,\n      actualPlayerMusic,\n      setActualPlayerMusic,\n      completePlayerMusic,\n      setCompletePlayerMusic\n    }}>\n      {children}\n    </globalContext.Provider>\n  )\n}\n","import React, { useContext } from 'react';\nimport AppBar from 'react-bootstrap/Navbar'\nimport { globalContext } from '../context/global';\n\nconst Navbar = () => {\n  const { path, fmtPath } = useContext(globalContext);\n\n  return (\n    <>\n      <AppBar bg=\"dark\" variant=\"dark\" fixed=\"top\">\n        <AppBar.Brand href=\"#\">\n          Remote music player - {fmtPath(path)}\n        </AppBar.Brand>\n      </AppBar>\n      <br /><br /><br />\n    </>\n  )\n}\n\nexport default Navbar\n","import React, { useContext } from 'react';\nimport { globalContext } from '../context/global';\n\nconst Player = () => {\n  const {\n    content,\n    completePlayerMusic,\n    actualPlayerMusic,\n    setActualPlayerMusic,\n  } = useContext(globalContext);\n\n  const handleEnd = () => {\n    if (content.files.indexOf(actualPlayerMusic) !== content.files.length - 1) {\n      const newIndex = content.files.indexOf(actualPlayerMusic) + 1;\n      setActualPlayerMusic(content.files[newIndex]);\n    }\n  }\n\n  return (\n    <>\n      <h4 className=\"mx-2\">\n        {actualPlayerMusic}\n      </h4>\n      <video\n        width=\"100%\"\n        height=\"15\"\n        id=\"player\"\n        autoPlay\n        controls\n        src={completePlayerMusic}\n        onEnded={handleEnd}\n      />\n    </>\n  )\n}\n\nexport default Player\n","import React, { useState, useEffect, useContext } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { globalContext } from '../context/global';\nimport client from '../client';\n\nconst Search = () => {\n  const [search, setSearch] = useState('');\n  const { path, setContent, setLoading } = useContext(globalContext);\n\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  }\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      if (search === '') {\n        setContent((await client.getContent(path)));\n      } else {\n        try {\n          setContent({\n            directories: (await client.getContent(path)).directories.filter((dirent) => (\n              new RegExp(search, 'g').test(dirent)\n            )),\n            files: (await client.getContent(path)).files.filter((file) => (\n              new RegExp(search, 'g').test(file)\n            )),\n          });\n        } catch (err) {\n          console.error(err.message);\n        }\n      }\n      setLoading(false);\n    })();\n    // eslint-disable-next-line\n  }, [search]);\n\n  return (\n    <>\n      <div className=\"mx-3\">\n        <Form.Group controlId=\"search\">\n          <Form.Label>Search (Regular expresion)</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter the search pattern\"\n            onChange={handleChange}\n          />\n        </Form.Group>\n      </div>\n    </>\n  )\n}\n\nexport default Search\n","import React, { useContext, useState } from 'react';\nimport { globalContext } from '../context/global';\nimport client from '../client';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport Form from 'react-bootstrap/Form';\n\nconst Mkdir = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [fields, setFields] = useState({ dirName: '' });\n  const { path, setLoading, setContent } = useContext(globalContext);\n\n  const toggleShowModal = () => setShowModal(!showModal);\n  const cancel = () => {\n    toggleShowModal();\n    setFields({ dirName: '' });\n  }\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFields({ ...fields, [name]: value });\n  }\n\n  const handleKeyDown = async (e) => {\n    if (e.key === \"Enter\") {\n      await mkdir();\n    }\n  }\n\n  const mkdir = async () => {\n    await client.mkdir(path, fields.dirName);\n\n    setLoading(true);\n    setContent((await client.getContent(path)));\n    setLoading(false);\n\n    toggleShowModal();\n  }\n\n  return (\n    <>\n      <Button variant=\"primary\" onClick={toggleShowModal}>\n        Make a directory\n      </Button>\n\n      <Modal show={showModal} onHide={toggleShowModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>\n            Make a directory.\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group className=\"mb-3\" controlId=\"name\">\n            <Form.Label>Directory name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"dirName\"\n              placeholder=\"Enter directory name\"\n              onChange={handleChange}\n              onKeyDown={handleKeyDown}\n            />\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={cancel}>\n            Close\n          </Button>\n\n          <Button variant=\"primary\" onClick={mkdir}>\n            Make\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default Mkdir\n","import React, { useState, useContext } from 'react';\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport Modal from 'react-bootstrap/Modal'\nimport client from '../client'\nimport { globalContext } from '../context/global'\n\nconst UploadMusic = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [files, setFiles] = useState([]);\n  const { path, setLoading, setContent } = useContext(globalContext);\n\n  const toggleShowModal = () => setShowModal(!showModal);\n  const handleFilesChange = (e) => setFiles(e.target.files);\n  const save = async () => {\n    toggleShowModal();\n    setLoading(true);\n    await client.uploadMusics(path, files);\n    setContent((await client.getContent(path)));\n    setLoading(false);\n  }\n\n  return (\n    <>\n      <Button variant=\"success\" onClick={toggleShowModal}>\n        Upload music\n      </Button>\n\n      <Modal show={showModal} onHide={toggleShowModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Upload music</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Form.Group controlId=\"musics\">\n            <Form.Label>Select the files</Form.Label>\n            <Form.File\n              multiple\n              onChange={handleFilesChange}\n            />\n          </Form.Group>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={toggleShowModal}>\n            Close\n          </Button>\n\n          <Button variant=\"primary\" onClick={save}>\n            Save\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  )\n}\n\nexport default UploadMusic\n","import React, { useContext } from 'react'\nimport { globalContext } from '../context/global';\nimport { Folder as FolderIcon } from 'react-bootstrap-icons';\n\nconst Folder = ({ dir }) => {\n  const { path, setPath } = useContext(globalContext);\n\n  const handleClick = () => {\n    if (path === '') {\n      setPath(`/${dir}`);\n    } else {\n      setPath(`${path}!${dir}`);\n    }\n  }\n\n  return (\n    <tr onClick={handleClick} style={{ cursor: \"pointer\" }}>\n      <td><FolderIcon size={32} /></td>\n      <td><h5>{dir}</h5></td>\n    </tr>\n  )\n}\n\nexport default Folder\n","import React, { useContext } from 'react'\nimport { FileMusic } from 'react-bootstrap-icons';\nimport { globalContext } from '../context/global';\n\nconst File = ({ file }) => {\n  const {\n    actualPlayerMusic,\n    setActualPlayerMusic\n  } = useContext(globalContext);\n\n  const handleFileClick = () => {\n    setActualPlayerMusic(file);\n  }\n\n  return (\n    <tr onClick={handleFileClick} style={{ cursor: \"pointer\" }}>\n      <td><FileMusic size={32} /></td>\n      <td>\n        <h5\n          className={\n            `text-${actualPlayerMusic === file ? 'info' : 'normal'}`\n          }\n        >\n          {file}\n        </h5>\n      </td>\n    </tr>\n  )\n}\n\nexport default File\n","import React, { useContext } from 'react';\nimport { Arrow90degUp } from 'react-bootstrap-icons';\nimport { globalContext } from '../context/global';\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Spinner from 'react-bootstrap/Spinner';\nimport Player from './Player'\nimport Search from './Search'\nimport Mkdir from './Mkdir'\nimport UploadMusic from './UploadMusic'\nimport Folder from './Folder'\nimport File from './File'\n\nconst Content = () => {\n  const {\n    loading,\n    content,\n    fmtPath,\n    path,\n    setPath,\n    showPlayer\n  } = useContext(globalContext);\n\n  const goToBack = () => {\n    if (path !== \"\") {\n      let newPath = path.split('!');\n      newPath.pop();\n      setPath(newPath.join('!'));\n    }\n  }\n\n  return (\n    <>\n      {showPlayer && (\n        <Player />\n      )}\n\n      <Row>\n        <Col className=\"my-2 mx-2\">\n          <h3>Content of {fmtPath(path)}</h3>\n        </Col>\n        <Col style={{ textAlign: \"right\" }} className=\"my-2 mx-2\">\n          <Mkdir />\n\n          &nbsp;\n\n          <UploadMusic />\n        </Col>\n      </Row>\n\n      <Search />\n\n      {loading ? (\n        <Spinner animation=\"border\">\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      ) : (\n        <table className=\"table\">\n          <tbody>\n            <tr\n              onClick={goToBack}\n              style={{ cursor: path === \"\" ? \"normal\" : \"pointer\" }}\n            >\n              <td><Arrow90degUp size={32} /></td>\n              <td><h5>..</h5></td>\n            </tr>\n            {content.directories.length === 0 && content.files.length === 0 ? (\n              <tr>\n                <td />\n                <td>Don't have content to show</td>\n              </tr>\n            ) : (\n              <>\n                {content.directories.map((dir, idx) => (\n                  <Folder\n                    key={idx}\n                    dir={dir}\n                  />\n                ))}\n\n                {content.files.map((file, idx) => (\n                  <File\n                    key={idx}\n                    file={file}\n                  />\n                ))}\n              </>\n            )}\n          </tbody>\n        </table>\n      )}\n    </>\n  )\n}\n\nexport default Content;\n","import React from 'react';\nimport { GlobalContextProvider } from './context/global';\n\nimport Navbar from './components/Navbar';\nimport Content from './components/Content';\n\nconst App = () => {\n  return (\n    <GlobalContextProvider>\n      <Navbar />\n      <Content />\n    </GlobalContextProvider>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootswatch/dist/darkly/bootstrap.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}